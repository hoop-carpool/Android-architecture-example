name: Test new version

on:
  push:
    tags:
      - '*'

jobs:
  unitTest:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
       
    - name: Unit tests
      run: bash ./gradlew test --stacktrace

  apk:
    name: Generate APK
    needs: unitTest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Assemble app debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload app APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Assemble Android Instrumentation Tests
        run: bash ./gradlew assembleDebugAndroidTest
        
      - name: Upload Android Test APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          
          
  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: apk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download Android test APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest

      - name: Login to Google Cloud
        uses: actions/gcloud/auth@master
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        uses: actions/gcloud/cli@master
        with:
          args: config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Instrumentation Tests in Firebase Test Lab
        uses: actions/gcloud/cli@master
        with:
          args: firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=es,orientation=portrait

  uploadartifact:
    needs: firebase
    name: Upload download-artifact
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v1

      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app-debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/zip


