name: Test new version

on:
  push:
    tags:
      - '*'

jobs:
  unitTest:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1.2.0

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
       
    - name: Unit tests
      run: bash ./gradlew test --stacktrace

    - name: Assemble app debug APK
      run: bash ./gradlew assembleDebug --stacktrace

    - name: Upload app APK
      uses: actions/upload-artifact@v1
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Assemble Android Instrumentation Tests
      run: bash ./gradlew assembleDebugAndroidTest
        
    - name: Upload Android Test APK
      uses: actions/upload-artifact@v1
      with:
        name: app-debug-androidTest
        path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

    - name: Login to Google Cloud
      uses: actions/gcloud/auth@master
      env:
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}

    - name: Set current project
      uses: actions/gcloud/cli@master
      with:
        args: config set project ${{ secrets.FIREBASE_PROJECT_ID }}

    - name: Run Instrumentation Tests in Firebase Test Lab
      uses: actions/gcloud/cli@master
      with:
        args: firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=es,orientation=portrait

    - name: Assemble app release APK
      run: bash ./gradlew assembleRelease -Pandroid.injected.signing.store.file=key.jks -Pandroid.injected.signing.store.password=123456 -Pandroid.injected.signing.key.alias=alias -Pandroid.injected.signing.key.password=123456

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/zip
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Send slack msg
      env:
        SLACK_GITHUB_BOT_TOKEN: ${{ secrets.SLACK_GITHUB_BOT_TOKEN }}
      run: |
        pip install requests
        python ./ci/sendApk.py ./app/build/outputs/apk/release/app-release.apk app-release


